.TH gdmd 1
.SH NAME
gdmd - wrapper script for gdc that emulates the dmd command
.SH SYNOPSIS
.B gdmd
files.d
...
.I { -switch }
.SH OPTIONS
.IP files.d
D source files
.IP files.di
D interface files
.IP files.o
Object files to link in
.IP files.a
Library files to link in
.IP "-arch ..."
pass -arch option to gdc
.IP -c
compile only, do not link
.IP -cov
do code coverage analysis
.IP -D
generate documentation
.IP -Dddocdir
write documentation file to docdir directory
.IP -Dffilename
write documentation file to filename
.IP -d
allow deprecated features
.IP -debug
compile in debug code
.IP -debug=level
compile in debug code <= level
.IP -debug=ident
compile in debug code identified by ident
.IP -debuglib=lib
debug library to use instead of phobos
.IP -defaultlib=lib
default library to use instead of phobos
.IP -deps=filename
write module dependencies to filename
.IP -f...
pass an -f... option to gdc
.IP -fall-sources
for every source file, semantically process each file preceding i
.IP "-framework ..."
pass a -framework ... option to gdc
.IP -g
add symbolic debug info
.IP -gs
always emit stack frame
.IP -H
generate 'header' file
.IP -Hdhdrdir
write 'header' file to hdrdir directory
.IP -Hffilename
write 'header' file to filename
.IP -Ipath
where to look for imports

.I path
is a ; separated list of paths. Multiple -I's can be used, and the paths are searched in the same order.

.IP -ignore
ignore unsupported pragmas
.IP -inline
do function inlining
.IP -Jpath
where to look for string imports
.IP -Llinkerflag
pass linkerflag to linker
.IP -lib
generate library
.IP -m...
pass an -m... option to gdc
.IP -man
open web browser on manual page
.IP -map
generate linker .map file
.IP -noboundscheck
turns off array bounds checking for all functions
.IP -O
optimize
.IP -o-
do not write object file
.IP -odobjdir
write object files to directory objdir
.IP -offilename
name output file to filename
.IP -op
do not strip paths from source file
.IP -pipe
use pipes instead of intermediate files
.IP -profile
profile runtime performance
.IP -quiet
suppress unnecessary error messages
.IP -q,<arg1>[,<arg2>,<arg3>,...]
Pass the comma-separated arguments to gdc
.IP -release
compile release version
.IP -run
run resulting program, passing args
.IP -shared
generate shared library (DLL)
.IP -unittest
compile in unit tests
.IP -v
verbose
.IP -vdmd
Print commands executed by this wrapper script
.IP --version
print compiler version and exit
.IP -h|--help
Print the usage information and exit
.IP -version=level
compile in version code >= level
.IP  version=ident
.IP -vtls
list all variables going into thread local storage
.IP -w
enable warnings
.IP -wi
enable informational warnings
compile in version code identified by ident
.IP -X
generate JSON file
.IP -Xffilename
write JSON to filename

.SH SEE ALSO
.BR gdc(1)

.SH AUTHOR
Copyright

(C) 2007 David Friedman

Maintained by:

(C) 2011 Iain Buclaw
