.TH gdmd 1
.SH NAME
gdmd - wrapper script for gdc that emulates the dmd command
.SH SYNOPSIS
.B gdmd
files.d
...
.I { -switch }
.SH OPTIONS
.IP files.d
D source files
.IP files.di
D interface files
.IP files.o
Object files to link in
.IP files.a
Library files to link in
.IP -allinst
generate code for all template instantiations
.IP "-arch ..."
pass -arch option to gdc
.IP -boundscheck=[on|safeonly|off]
bounds checks on, in @safe only, or off
.IP -betterC
omit generating some runtime information and helper functions
.IP -c
compile only, do not link
.IP -color
turn  colored console output on
.IP -color=[on|off|auto]
Force colored console output on or off, or only when not redirected
.IP -cov
do code coverage analysis
.IP -D
generate documentation
.IP -Dddocdir
write documentation file to docdir directory
.IP -Dffilename
write documentation file to filename
.IP -d
allow deprecated features
.IP -debug
compile in debug code
.IP -debug=level
compile in debug code <= level
.IP -debug=ident
compile in debug code identified by ident
.IP -debuglib=lib
debug library to use instead of phobos
.IP -defaultlib=lib
default library to use instead of phobos
.IP -deps=filename
write module dependencies to filename
.IP -extern-std=standard
Sets the C++ name mangling compatiblity. Check -fextern-std in gdc(1)
.IP -f...
pass an -f... option to gdc
.IP -fall-sources
for every source file, semantically process each file preceding i
.IP "-framework ..."
pass a -framework ... option to gdc
.IP -g
add symbolic debug info
.IP -gs
always emit stack frame
.IP -H
generate 'header' file
.IP -Hdhdrdir
write 'header' file to hdrdir directory
.IP -Hffilename
write 'header' file to filename
.IP -HC=value
Control the verbosity of C++ header generation. Possible values are:
.RS
.IP \(bu 2
silent
.IP \(bu
verbose

Add comments for ignored declarations in the generated C++ header.
.RE
.IP -HCf=filename
write C++ 'header' file to filename
.IP -Ipath
where to look for imports

.I path
is a ; separated list of paths. Multiple -I's can be used, and the paths are searched in the same order.

.IP -i
Include imported modules in the compilation, as if they were given on the command line. When this option is enabled, all imported modules are compiled except those that are part of libphobos.
.IP -ignore
ignore unsupported pragmas
.IP -inline
do function inlining
.IP -Jpath
where to look for string imports
.IP -Llinkerflag
pass linkerflag to linker
.IP -lib
generate library
.IP -m...
pass an -m... option to gdc
.IP -man
open web browser on manual page
.IP -map
generate linker .map file
.IP -mixin=filename
expand and save mixins to file specified by filename
.IP -noboundscheck
turns off array bounds checking for all functions
.IP -O
optimize
.IP -o-
do not write object file
.IP -odobjdir
write object files to directory objdir
.IP -offilename
name output file to filename
.IP -op
do not strip paths from source file
.IP -pipe
use pipes instead of intermediate files
.IP -preview=id
enable an upcoming language change identified by id. Check -fpreview in gdc(1)
.IP -profile
profile runtime performance
.IP -revert=id
revert language change identified by id. Check -frevert in gdc(1)
.IP -quiet
suppress unnecessary error messages
.IP -q,<arg1>[,<arg2>,<arg3>,...]
Pass the comma-separated arguments to gdc
.IP -release
compile release version
.IP -run
run resulting program, passing args
.IP -shared
generate shared library (DLL)
.IP -transition=id
report additional information about D language changes identified by id. Check -ftransition in gdc(1)
.IP -unittest
compile in unit tests
.IP -v
verbose
.IP -vdmd
Print commands executed by this wrapper script
.IP -verror-style=[gnu|sarif]
Set the style for file/line number annotations on compiler messages
.IP --version
print compiler version and exit
.IP -h|--help
Print the usage information and exit
.IP -version=level
compile in version code <= level
.IP -version=ident
compile in version code identified by ident
.IP -vtemplates
list statistics on template instantiations
.IP -vtls
list all variables going into thread local storage
.IP -w
enable warnings
.IP -wi
enable informational warnings
compile in version code identified by ident
.IP -X
generate JSON file
.IP -Xffilename
write JSON to filename

.SH SEE ALSO
.BR gdc(1)

.SH AUTHOR
Copyright

(C) 2007 David Friedman

Maintained by:

(C) 2011 Iain Buclaw
